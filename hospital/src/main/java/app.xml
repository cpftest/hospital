<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<context:component-scan base-package="com.newcapec" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close" lazy-init="default">
		<!-- 基本属性 url、user、password -->
		<property name="url"
			value="jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf-8" />
		<property name="username" value="root" />
		<property name="password" value="sa" />
	</bean>

	<!-- 事务管理器，jdbc\mybatis 都使用这个事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven  transaction-manager="transactionManager"/>

	<!-- 对事务管理器的一个增强 the transactional advice (what 'happens'; see the <aop:advisor/> 
		bean below) -->
<!-- 	<tx:advice id="txAdvice" transaction-manager="txManager"> -->
		<!-- the transactional semantics... -->
<!-- 		<tx:attributes> -->
			<!-- 可以控制数据的只读属性、事务的传播属性、回滚 ； name:匹配方法 -->
			<!-- all methods starting with 'get' are read-only -->
<!-- 			<tx:method name="ch*" /> -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->

	<!-- 定义 那些方法启用事务 -->
	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface -->
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="userServiceOperation" -->
<!-- 			expression="execution(* com.newcapec.edu.service.*.*(..))" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="userServiceOperation" /> -->
<!-- 	</aop:config> -->

	<!-- 创建 mybatis 的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- mybatis 的接口映射 -->
	<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
	<!-- <property name="mapperInterface" value="org.mybatis.spring.sample.mapper.UserMapper" 
		/> -->
	<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
	<!-- </bean> -->

<!-- 注入  mybatis 的  接口映射    -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.newcapec.edu.mapper" />
	</bean>

</beans>
